#v(0.3cm) // вертикальный отступ, горизонтальный h

#set par(justify : true, first-line-indent: 2em)

/ Вопрос 1: В какой регистр надо поместить код выводимого символа? Какой код Dos-функции используется для вывода отдельного символа на экран?

Код выводимого символа надо поместить в регистр DL. Для вывода отдельного символа используется Dos-функция 02h (прерывание 21h)

/ Вопрос 2: Какая операция позволяет получить для цифры её код в кодовой таблице?

Для вывода на экран цифры необходимо сначала преобразовать ее в символьную форму. Для получения символьной формы необходимо заменить цифру кодом ASCII ее изображения. Используем для этой цели команду ADD арифметического сложения цифры, содержащейся в регистре, с числом 30h – шестнадцатеричным кодом 0.


/ Вопрос 3: Объясните назначение процедуры. Как определяются начало и конец процедуры?  

Практически все современные программы состоят из одной главной программы и небольших частей, то есть подпрограмм (или *процедур*). (Главная программа вызывает эти процедуры на выполнение, передавая им управление процессором. После завершения работы процедуры возвращают управление главной программе и выполнение продолжается с команды, следующей за командой вызова подпрограммы) Достоинством такого метода является возможность разработки программ значительно большего объема небольшими функционально законченными частями.

Описание процедуры имеет следующий синтаксис:
```nasm
<имя_процедуры> PROC <параметр>
<тело_процедуры>
RET ;Возврат из подпрограммы в точку вызова
<имя_процедуры> ENDP
```
Директива ENDP указывает на конец процедуры и содержит то же имя, что и предложение PROC, чтобы позволить ассемблеру соотнести конец процедуры и ее начало. Поскольку процедура должна полностью содержаться в одном сегменте, ENDP завершает процедуру перед тем, как ENDS определяет конец сегмента.


/ Вопрос 4: Ваша программа состоит из главной процедуры и процедур-подпрограмм. Каким может быть взаимное расположение главной процедуры и подпрограмм?

В общем случае, размещать подпрограмму в теле программы можно где угодно, но при этом следует помнить, что сама по себе подпрограмма выполняться не должна, а должна выполняться лишь при обращении к ней. Поэтому подпрограммы принято размещать либо в конце сегмента кода, после команд завершения программы, либо в самом начале сегмента кода, перед точкой входа в программу. В больших программах подпрограммы нередко размещают в отдельном кодовом сегменте.




Язык программирования ассемблера поддерживает применение процедур двух типов – ближнего (near) и дальнего (far).

Процедуры ближнего типа должны находиться в том же сегменте, что и вызывающая программа. Дальний тип процедуры означает, что к ней можно обращаться из любого другого кодового сегмента.


/ Вопрос 5: Как процессор использует стек при работе с любой процедурой?

Все команды вызова CALL безусловны. Внутрисегментный вызов NEAR CALL используется для передачи управления процедуре, находящейся в том же сегменте. Он указывает новое значение регистра IP и сохраняет в стеке адрес возврата, т.е. IP команды, следующей за командой CALL. Межсегментный вызов FAR CALL используется для передачи управления процедуре, находящейся в другом сегменте или даже программном модуле. Он задает новые значения сегмента CS и смещения IP для дальнейшего выполнения программы и сохраняет в стеке как регистр IP, так и регистр CS.


/ Вопрос 6: С помощью какой команды вызывается процедура? Как меняется значение регистра SP после вызова процедуры? Приведите пример из вашей таблицы трассировки.

Для работы с подпрограммами в систему команд процессора включены специальные команды, это вызов подпрограммы CALL и возврат управления RET. При вызове процедуры в стеке сохраняется адрес возврата в вызывающую программу. 

Пример из трассировки первой программы: до вызова процедуры printEnter (название процедуры из программы 1) 

SP = FFFE, затем SP = FFFC, после завершения процедуры SP становится вновь равен FFFE. SP уменьшается ровно на 2 байта во время вызова процедуры из-за сохранения адреса возврата в стеке.


/ Вопрос 7: После какой команды процедуры из стека извлекается адрес возврата?

Адрес возврата извлекается из стека после завершение работы процедуры командой ret.